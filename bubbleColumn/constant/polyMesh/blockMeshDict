/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.4.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1; // all values stands for 'meter'

vertices
(
    (-50 -1 -1)  // vertice 0
    (6 -1 -1)   // vertice 1
    (6 1 -1)    //         2
    (-50 1 -1)   //         3
    (-50 -1 1)   //         4
    (6 -1 1)    //         5
    (6 1 1)     //         6
    (-50 1 1)    //         7
    	
   // (6 -0.99 -1)//        8		
   // (6 0.99  -1)//        9
   // (6 -0.99 1) //        10
   // (6 0.99  1) //        11
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (1000 1 1) simpleGrading (1 1 1)
   // hex (1 8 9 2 5 10 11 6) (100 1 1) simpleGrading (1 1 1) 		
);

edges //defalut is a straight line
(
    //polyLine 3 2
    //(
    	//(-5 1 -1)
	//(2 1 -1)
	//(3 0.8 -0.8)
	//(4 0.5 -0.5)
	//(5 0.3 -0.3)
	//(6 0.1 -1)
    //)
    //polyLine 0 1
    //(
    	//(-5 -1 -1)
	//(2 -1 -1)
	//(3 -0.8 -0.8)
	//(4 -0.5 -0.5)
	//(5 -0.3 -0.3)
	//(6 -0.1 -1)
    //)
    //polyLine 7 6 
    //( 	
    	//(-5 1 1)
    	//(2 1 1)
	//(3 0.8 0.8)
	//(4 0.5 0.5)
	//(5 0.3 0.3)
    	//(6 0.1 1)
    //)
    //polyLine 4 5
    //(	
    	//(-5 -1 1)
    	//(2 -1 1)
	//(3 -0.8 0.8)
	//(4 -0.5 0.5)
	//(5 -0.3 0.3)
    	//(6 -0.1 1)
    
    //)
);

boundary
(
    sideLeft
    {
        type symmetryPlane;
        faces
        (
            (0 4 7 3)
        );
    }
    sideRight
    {
    	type patch;
	faces
	(
	   //(8 10 11 9)	
           (1 5 6 2)				
	);

    }
 
    //empty
    topbottom
    {
        //type empty;
        type empty;
	faces
        (
            (0 1 5 4)
           // (5 6 7 4)
            (3 7 6 2)
           // (0 3 2 1)
           // (1 8 10 5)
	   //(10 11 6 5)
	   // (2 6 11 9)
	   //(1 2 9 8)
        );
    }
    

    //empty
    frontback	
    {
	//type empty;
        type empty;
	faces
        (
            //(0 1 5 4)
           (5 6 7 4)
            //(3 7 6 2)
           (0 3 2 1)
           //(1 8 10 5)
	   // (10 11 6 5)
	   //(2 6 11 9)
	   // (1 2 9 8)
        );
    }
    
);

mergePatchPairs
(
);

// ************************************************************************* //
